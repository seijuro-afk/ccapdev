<div class="container-fluid mt-3">
    <div class="row">
        <!-- Left Sidebar -->
        <div class="col-md-3 d-none d-md-block">
            <div class="list-group">
                {{#each sidebarLinks}}
                    <a href="{{this.url}}" class="list-group-item list-group-item-action {{#if this.active}}active{{/if}}">
                        {{this.label}}
                    </a>
                {{/each}}
            </div>                
        </div>

        <!-- Main Feed -->
        <div class="col-md-6">
            <!-- Post Creation Card -->
            <div class="card mb-3">
                <div class="card-body">
                    <form action="/posts/create" method="POST">
                        <textarea class="form-control mb-2" name="content" placeholder="What's buzzing?" rows="3"></textarea>
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div>
                                <label for="postAuthor" class="small">Posting as: <span class="fw-bold">{{loggedInUserName}}</span></label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="anonymousCheckbox" name="anonymous">
                                <label class="form-check-label small" for="anonymousCheckbox">Post Anonymously</label>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-success w-100">Post</button>
                    </form>
                </div>
            </div>

            <!-- Posts Section -->
            {{#each posts}}
                <div class="card mb-3" data-post-id="{{this._id}}">
                    <div class="card-body">
                        <div class="d-flex">
                            <!-- Author Avatar -->
                            {{#if this.authorId.pfp_url}}
                                <img src="{{this.authorId.pfp_url}}" class="rounded-circle me-3" alt="Avatar" width="50" height="50">
                            {{else}}
                                <img src="/images/spongebob.jpg" class="rounded-circle me-3" alt="Default Avatar" width="50" height="50">
                            {{/if}}
                            
                            <!-- Post Content -->
                            <div class="flex-grow-1">
                                <h6 class="card-title mb-1">{{this.author}}</h6>
                                <p class="card-text mb-2">{{this.content}}</p>
                                
                                <!-- Vote Buttons -->
                                <div class="d-flex gap-2 mb-2">
                                    <button class="btn btn-sm btn-outline-success upvote-btn" data-post-id="{{this._id}}">
                                        <i class="fa fa-arrow-up"></i> <span class="upvote-count">{{this.upvotes}}</span>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger downvote-btn" data-post-id="{{this._id}}">
                                        <i class="fa fa-arrow-down"></i> <span class="downvote-count">{{this.downvotes}}</span>
                                    </button>
                                    <button class="btn btn-sm btn-outline-primary comment-btn" data-post-id="{{this._id}}">
                                        <i class="fa fa-comment"></i> Comment
                                    </button>
                                </div>
                                
                                <!-- Comments Section -->
                                <div class="comments-section mt-3" id="comments-{{this._id}}">
                                    <h6 class="border-bottom pb-2">Comments</h6>
                                    {{#each this.comments}}
                                        <div class="d-flex mb-2">
                                            <div class="flex-grow-1 bg-light rounded p-2">
                                                <strong class="d-block">{{this.author}}</strong>
                                                <span>{{this.content}}</span>
                                            </div>
                                        </div>
                                    {{else}}
                                        <p class="text-muted small">No comments yet.</p>
                                    {{/each}}
                                </div>
                                
                                <!-- Comment Form -->
                                <form class="comment-form mt-3" data-post-id="{{this._id}}" action="/comments/add" method="POST">
                                    <input type="hidden" name="postId" value="{{this._id}}">
                                    <div class="mb-2">
                                        <input type="text" name="author" class="form-control form-control-sm" placeholder="Your name (optional)">
                                    </div>
                                    <div class="input-group">
                                        <textarea name="content" placeholder="Write a comment..." class="form-control" rows="1" required></textarea>
                                        <button type="submit" class="btn btn-primary">Post</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            {{/each}}
        </div>

        <!-- Right Sidebar (Trending) -->
        <div class="col-md-3 d-none d-md-block">
            <div class="card">
                <div class="card-header bg-success text-white">Trending Topics</div>
                <ul class="list-group list-group-flush">
                    {{#each trendingTopics}}
                        <li class="list-group-item">{{this}}</li>
                    {{/each}}
                </ul>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const anonymousCheckbox = document.getElementById('anonymousCheckbox');
        const loggedInUserName = "{{loggedInUserName}}";
        const postForm = document.getElementById('postForm');

        // Handle post creation
        postForm.addEventListener('submit', async function (e) {
            e.preventDefault();
            const content = this.querySelector('[name="content"]').value;
            const author = anonymousCheckbox.checked ? 'Anonymous' : loggedInUserName;

            try {
                const response = await fetch('/posts/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ author, content })
                });

                const data = await response.json();
                if (data.success) location.reload();
                else alert('Error creating post');
            } catch (error) {
                console.error(error);
                alert('Error creating post');
            }
        });

        // Upvote / Downvote
        const voteButtons = document.querySelectorAll('.upvote-btn, .downvote-btn');
        voteButtons.forEach(btn => {
            btn.addEventListener('click', async function () {
                const postId = this.dataset.postId;
                const voteType = this.classList.contains('upvote-btn') ? 'upvote' : 'downvote';

                try {
                    const res = await fetch(`/posts/${postId}/vote`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ type: voteType })
                    });

                    const data = await res.json();
                    if (data.success) {
                        const postCard = this.closest('.post');
                        postCard.querySelector('.upvote-count').textContent = data.upvotes;
                        postCard.querySelector('.downvote-count').textContent = data.downvotes;
                    } else {
                        alert('Voting failed.');
                    }
                } catch (err) {
                    console.error(err);
                    alert('Error voting.');
                }
            });
        });

        // Comments
        const commentForms = document.querySelectorAll('.comment-form');
        commentForms.forEach(form => {
            form.addEventListener('submit', async function (e) {
                e.preventDefault();
                const postId = this.dataset.postId;
                const author = this.querySelector('[name="author"]').value || 'Anonymous';
                const content = this.querySelector('[name="content"]').value;

                try {
                    const res = await fetch('/comments/add', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ postId, author, content })
                    });

                    const data = await res.json();
                    if (data.success) {
                        const commentsSection = document.getElementById(`comments-${postId}`);
                        const newComment = document.createElement('div');
                        newComment.classList.add('comment', 'border', 'rounded', 'p-2', 'my-1');
                        newComment.innerHTML = `<strong>${author}</strong>: ${content}`;
                        commentsSection.appendChild(newComment);
                        this.reset();
                    } else {
                        alert('Failed to add comment.');
                    }
                } catch (err) {
                    console.error(err);
                    alert('Error submitting comment.');
                }
            });
        });
    });
</script>